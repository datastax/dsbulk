<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2017 DataStax Inc.

    This software can be used solely with DataStax Enterprise. Please consult the license at
    http://www.datastax.com/terms/datastax-dse-driver-license-terms

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>dsbulk-parent</artifactId>
    <groupId>com.datastax.dse</groupId>
    <version>1.0.0-alpha2-SNAPSHOT</version>
  </parent>

  <artifactId>dsbulk-engine</artifactId>

  <name>DataStax Bulk Loader/Unloader - Engine</name>
  <description>
    Workflow execution engine of the DataStax Bulk Loader/Unloader.
  </description>

  <dependencies>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dsbulk-commons</artifactId>
    </dependency>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dsbulk-executor-reactor</artifactId>
    </dependency>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dsbulk-connectors-csv</artifactId>
    </dependency>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dsbulk-connectors-json</artifactId>
    </dependency>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dsbulk-connectors-cql</artifactId>
    </dependency>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dse-java-driver-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.datastax.dse</groupId>
      <artifactId>dse-java-driver-extras</artifactId>
    </dependency>

    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-ffi</artifactId>
    </dependency>

    <dependency>
      <groupId>net.jpountz.lz4</groupId>
      <artifactId>lz4</artifactId>
    </dependency>

    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hdrhistogram</groupId>
      <artifactId>HdrHistogram</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative</artifactId>
      <classifier>${os.detected.classifier}</classifier>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>generate-settings-doc</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scripts>
            <script><![CDATA[
            import java.nio.file.*
            import com.datastax.dsbulk.engine.internal.SettingsDocumentor
            def manual = Paths.get("${project.basedir}/../manual")
            new SettingsDocumentor("DataStax Bulk Loader Options", manual.resolve("settings.md"))
          ]]></script>
          </scripts>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
</project>
